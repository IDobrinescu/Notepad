<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MyLocalDBDataSet" targetNamespace="http://tempuri.org/MyLocalDBDataSet.xsd" xmlns:mstns="http://tempuri.org/MyLocalDBDataSet.xsd" xmlns="http://tempuri.org/MyLocalDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MyLocalDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MyLocalDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Notepad.Properties.Settings.GlobalReference.Default.MyLocalDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FilesTabelTableAdapter" GeneratorDataComponentClassName="FilesTabelTableAdapter" Name="FilesTabel" UserDataComponentName="FilesTabelTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyLocalDBConnectionString (Settings)" DbObjectName="MyLocalDB.dbo.FilesTabel" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[FilesTabel] WHERE (([FileName] = @Original_FileName) AND ([UserName] = @Original_UserName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_FileName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[FilesTabel] ([FileName], [UserName], [Text]) VALUES (@FileName, @UserName, @Text);
SELECT FileName, UserName, Text FROM FilesTabel WHERE (FileName = @FileName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@FileName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Text" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FileName, UserName, Text FROM dbo.FilesTabel</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[FilesTabel] SET [FileName] = @FileName, [UserName] = @UserName, [Text] = @Text WHERE (([FileName] = @Original_FileName) AND ([UserName] = @Original_UserName));
SELECT FileName, UserName, Text FROM FilesTabel WHERE (FileName = @FileName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@FileName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Text" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_FileName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FileName" DataSetColumn="FileName" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Text" DataSetColumn="Text" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyLocalDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO FilesTabel
                         (FileName, UserName, Text)
VALUES        (@FileName,@UserName,@Text); 
SELECT FileName, UserName, Text FROM FilesTabel WHERE (FileName = @FileName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="FileName" ColumnName="FileName" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@FileName" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserName" ColumnName="UserName" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Text" ColumnName="Text" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@Text" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyLocalDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       FilesTabel
SET                Text = @Text
WHERE        (FileName = @Original_FileName) AND (UserName = @Original_UserName); 
SELECT FileName, UserName, Text FROM FilesTabel WHERE (FileName = @FileName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Text" ColumnName="Text" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@Text" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_FileName" ColumnName="FileName" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_FileName" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_UserName" ColumnName="UserName" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FileName" ColumnName="FileName" DataSourceName="MyLocalDB.dbo.FilesTabel" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@FileName" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="FileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableTableAdapter" GeneratorDataComponentClassName="UsersTableTableAdapter" Name="UsersTable" UserDataComponentName="UsersTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyLocalDBConnectionString (Settings)" DbObjectName="MyLocalDB.dbo.UsersTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UsersTable] WHERE (([ID] = @Original_ID) AND ([Password] = @Original_Password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UsersTable] ([ID], [Password]) VALUES (@ID, @Password);
SELECT ID, Password FROM UsersTable WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Password FROM dbo.UsersTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UsersTable] SET [ID] = @ID, [Password] = @Password WHERE (([ID] = @Original_ID) AND ([Password] = @Original_Password));
SELECT ID, Password FROM UsersTable WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyLocalDBConnectionString (Settings)" DbObjectName="MyLocalDB.dbo.UsersTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ID, Password
FROM            UsersTable
WHERE        (ID = @ID) AND (Password = @Password)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="MyLocalDB.dbo.UsersTable" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Password" ColumnName="Password" DataSourceName="MyLocalDB.dbo.UsersTable" DataTypeServer="nchar(8)" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NChar" Scale="0" Size="8" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MyLocalDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[UsersTable] ([ID], [Password]) VALUES (@ID, @Password);
SELECT ID, Password FROM UsersTable WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="MyLocalDB.dbo.UsersTable" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Password" ColumnName="Password" DataSourceName="MyLocalDB.dbo.UsersTable" DataTypeServer="nchar(8)" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NChar" Scale="0" Size="8" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MyLocalDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MyLocalDBDataSet" msprop:Generator_UserDSName="MyLocalDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="FilesTabel" msprop:Generator_TableClassName="FilesTabelDataTable" msprop:Generator_TableVarName="tableFilesTabel" msprop:Generator_TablePropName="FilesTabel" msprop:Generator_RowDeletingName="FilesTabelRowDeleting" msprop:Generator_RowChangingName="FilesTabelRowChanging" msprop:Generator_RowEvHandlerName="FilesTabelRowChangeEventHandler" msprop:Generator_RowDeletedName="FilesTabelRowDeleted" msprop:Generator_UserTableName="FilesTabel" msprop:Generator_RowChangedName="FilesTabelRowChanged" msprop:Generator_RowEvArgName="FilesTabelRowChangeEvent" msprop:Generator_RowClassName="FilesTabelRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FileName" msprop:Generator_ColumnVarNameInTable="columnFileName" msprop:Generator_ColumnPropNameInRow="FileName" msprop:Generator_ColumnPropNameInTable="FileNameColumn" msprop:Generator_UserColumnName="FileName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Text" msprop:Generator_ColumnVarNameInTable="columnText" msprop:Generator_ColumnPropNameInRow="Text" msprop:Generator_ColumnPropNameInTable="TextColumn" msprop:Generator_UserColumnName="Text">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UsersTable" msprop:Generator_TableClassName="UsersTableDataTable" msprop:Generator_TableVarName="tableUsersTable" msprop:Generator_RowChangedName="UsersTableRowChanged" msprop:Generator_TablePropName="UsersTable" msprop:Generator_RowDeletingName="UsersTableRowDeleting" msprop:Generator_RowChangingName="UsersTableRowChanging" msprop:Generator_RowEvHandlerName="UsersTableRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersTableRowDeleted" msprop:Generator_RowClassName="UsersTableRow" msprop:Generator_UserTableName="UsersTable" msprop:Generator_RowEvArgName="UsersTableRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:FilesTabel" />
      <xs:field xpath="mstns:FileName" />
    </xs:unique>
    <xs:unique name="UsersTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UsersTable" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>